- bit_tools, do it !!!
- boost::algorithm::starts_with() -- replace?
- getFileForTrack->rename and don't move the file!file
- TrackLoader remove dependency Downloads
- Context -> RegistryPattern -> or globals?
- private -> protected
- wtf xml.hpp that optimization did'nt work?!
- cstring -> starts_with <<< NO ???
- Errhandling on trackloader/filedownload - what to do on excp?
- Config: Themes set()
- Make the Result class a Generic. Do std::sort() etc, by providing lambdas
- keybindings: ^R, maybe even F5 for reloading, ^S for saving?
- pads: fix mouse offset // ui.hpp mincol etc...
- noexcept on noutrefresh etc.
- vol. 3 ?
x config: temp -> $TEMP
- config: prefetch
- Downloads: unique_ptr <<< shall Downloads own a Download?
- Browsepage: more scanner usage
- xml.hpp: iterators
- Vector: __enter__ __leave__
- [try_]{read,peek,eat}_[span_]{re,str,char,char_of}
- replace cout/cerr/fstreams
- remove exceptions
- replace ui/colors vector<unsigned>

total heap usage: 6,802 allocs, 6,312 frees, 4,567,167 bytes allocated

===============================================================================

- application.cpp
  - Preload playlist
  - What to do when the database has updated?
- downloads.cpp
  - Maybe add a --tries option to the Download base class?!
  - Micro optimiation: Preallocate buffer for downloads (50*1024 for BrowsePage src)
- Add views/browser.cpp
    if (selection)
      color = UI::Colors.get("list.item_selection");
    else if (index % 2 == 0)
      color = UI::Colors.get("list.item_even");
    else
      color = UI::Colors.get("list.item_odd");
