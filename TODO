TODO
  - browsepage.cpp / updater.cpp:
    Ensure that exceptions will be logged instead of terminating the program

  - Add filenames to error messages (WHICH FILES?!)

  - lib/bit_tools.hpp:
    - not portable yet (check if __builtin_clz is available and provide alternatives)
    - replace_bits/extract_bits...

  - lib/packedvector.hpp:
    - is a complete mess
    - add tests (including performance tests!)
    - maybe rename `__enter__` and `__leave__`

  - lib/downloads.cpp:
    - Downloads :: addDownload(Download*): Should this own the passed download?

  - trackloader.cpp:
    - Exceptions? Are they logged yet?!
    - Add code for downloading a whole album (keybinding `$`?)
    - Add code for playing a file from a downloaded album

  - playlist:
    ^S for saving?

  - Add a browser

MAYBE
  - Create a "StringScan" class that replaces sscanf() and use it in browsepage.cpp
    [try_]{read,peek,search,skip,eat}_[span_]{re,str,char,char_of}
    seek_to, seek_beyond, seek_before...

  - Instead of having multiple settings for each terminal setup (MONO/8/256 - infoline.format_top/infoline.format_top_256)
    we could only use the setting for 256 colors and deduce the setting for 8-bit terminals
  - Maybe we should add the `pprintpp` library instead of using printf()? Hey, it's zero cost!
  - config.cpp:
    - Probe for $TMPDIR/$TEMP instead of using hardcoded /tmp for download directory
  - xml.hpp:
    messy code... iterators?!
  - keybindings:
    ^R/F5 for reloading the browser after a database update has been done
  - lib/cstring.hpp
    - merge char/wchar_t classes into a templated class like basic_string<>
    - add starts_with and other functions?
  - strinkchunk: eliminate CString


NOTES
  - I observed that the `constexpr` qualifier increases the binary size
  - Is there a `return value optimization` in a class initializer list?
  - private -> protected
  - wtf xml.hpp that optimization did'nt work?!
