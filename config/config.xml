<config>
  <opt name="database_file" type="std::string" parse="Filesystem::expand" default="CONFIG_DIR + PATH_SEP &quot;meta.db&quot;" lateinit="yes">
    <description>
      Database file for storing ektoplazm metadata
    </description>
  </opt>

  <opt name="log_file" type="std::string" parse="Filesystem::expand" default="CONFIG_DIR + PATH_SEP &quot;ektoplayer.log&quot;" lateinit="yes">
    <description>
      File used for logging
    </description>
  </opt>

  <opt name="temp_dir" type="std::string" parse="Filesystem::expand" default="&quot;/tmp/.ektoplazm&quot;">
    <description>
      Temporary dir for downloading mp3 files.
      They will be moved to `cache_dir` after the download completed and was successful.
      Directory will be created if it does not exist, parent directories will not be created.
    </description>
  </opt>

  <opt name="cache_dir" type="std::string" parse="Filesystem::expand" default="HOME + PATH_SEP &quot;.cache&quot; PATH_SEP &quot;ektoplayer&quot;" lateinit="yes">
    <description>
      Directory for storing cached mp3 files
    </description>
  </opt>

  <opt name="archive_dir" type="std::string" parse="Filesystem::expand" default="CONFIG_DIR + PATH_SEP &quot;archives&quot;" lateinit="yes">
    <description>Where to search for downloaded MP3 archives</description>
  </opt>

  <opt name="download_dir" type="std::string" parse="Filesystem::expand" default="&quot;/tmp&quot;">
    <description>Where to store downloaded MP3 archives</description>
  </opt>

  <opt name="auto_extract_to_archive_dir" type="bool" parse="opt_parse_bool" default="true">
    <description>
      Enable/disable automatic extraction of downloaded MP3
      archives from `download_dir` to `archive_dir`
    </description>
  </opt>

  <opt name="delete_after_extraction" type="bool" parse="opt_parse_bool" default="true">
    <description>
      In combination `with auto_extract_to_archive_dir`:
      Delete zip archive after successful extraction
    </description>
  </opt>

  <opt name="playlist_load_newest" type="int" parse="opt_parse_int" default="1000">
    <description>
        How many tracks from database should be added to the playlist on application start.
    </description>
  </opt>

  <opt name="use_cache" type="bool" parse="opt_parse_bool" default="true">
    <description>
      Enable/disable local mp3 cache.
      If this option is disabled, the downloaded mp3 files won't be moved from `cache_dir`.
      Instead they will reside in `temp_dir` and will be deleted on application exit.
    </description>
  </opt>

  <opt name="prefetch" type="bool" parse="opt_parse_bool" default="true">
    <description>Enable prefetching the next track do be played</description>
  </opt>

  <opt name="small_update_pages" type="int" parse="opt_parse_int" default="5">
    <description>How many pages should be fetched after start</description>
  </opt>

  <opt name="use_colors" type="int" parse="opt_parse_use_colors" default="&quot;auto&quot;" lateinit="yes">
    <description>Choose color capabilities. auto|mono|8|256</description>
  </opt>

  <opt name="audio_system" type="std::string" parse="std::string" default="&quot;pulse,alsa,jack,oss&quot;">
    <description>Set output audio system. See option `-o` in mpg123(1)</description>
  </opt>

  <opt name="threads" type="int" parse="opt_parse_threads" default="20">
    <description>Number of download threads during database update</description>
  </opt>

  <opt name="playlist.format" type="PlaylistColumns" parse="opt_parse_playlist_format" default="DEFAULT_PLAYLIST_FORMAT" lateinit="yes">
    <description>Format of playlist columns</description>
  </opt>

  <opt name="playlist.format_256" type="PlaylistColumns" parse="opt_parse_playlist_format" default="DEFAULT_PLAYLIST_FORMAT_256" lateinit="yes">
    <description>Format of playlist columns (256 colors)</description>
  </opt>

  <opt name="browser.format" type="PlaylistColumns" parse="opt_parse_playlist_format" default="DEFAULT_PLAYLIST_FORMAT" lateinit="yes">
    <description>Format of browser columns</description>
  </opt>

  <opt name="browser.format_256" type="PlaylistColumns" parse="opt_parse_playlist_format" default="DEFAULT_PLAYLIST_FORMAT_256" lateinit="yes">
    <description>Format of browser columns (256 colors)</description>
  </opt>

  <opt name="progressbar.display" type="bool" parse="opt_parse_bool" default="true">
    <description>Enable/disable progressbar</description>
  </opt>

  <opt name="progressbar.progress_char" type="char" parse="opt_parse_char" default="&apos;~&apos;">
    <description>Character used for displaying playing progress</description>
  </opt>

  <opt name="progressbar.rest_char" type="char" parse="opt_parse_char" default="&apos;~&apos;">
    <description>Character used for the rest of the line</description>
  </opt>

  <opt name="playinginfo.display" type="bool" parse="opt_parse_bool" default="true">
    <description>Enable/display playinginfo</description>
  </opt>

  <opt name="playinginfo.format_top" type="PlayingInfoFormat" parse="opt_parse_playinginfo_format" default="DEFAULT_PLAYINGINFO_FORMAT_TOP" lateinit="yes">
    <description>Format of first line in playinginfo</description>
  </opt>

  <opt name="playinginfo.format_top_256" type="PlayingInfoFormat" parse="opt_parse_playinginfo_format" default="DEFAULT_PLAYINGINFO_FORMAT_TOP_256" lateinit="yes">
    <description>Format of first line in playinginfo (256 colors)</description>
  </opt>

  <opt name="playinginfo.format_bottom" type="PlayingInfoFormat" parse="opt_parse_playinginfo_format" default="DEFAULT_PLAYINGINFO_FORMAT_BOTTOM" lateinit="yes">
    <description>Format of second line in playinginfo</description>
  </opt>

  <opt name="playinginfo.format_bottom_256" type="PlayingInfoFormat" parse="opt_parse_playinginfo_format" default="DEFAULT_PLAYINGINFO_FORMAT_BOTTOM_256" lateinit="yes">
    <description>Format of second line in playinginfo (256 colors)</description>
  </opt>

  <opt name="tabbar.display" type="bool" parse="opt_parse_bool" default="true">
    <description>Enable/disable tabbar TODO: do we need this?</description>
  </opt>

  <opt name="tabs.widgets" type="std::vector&lt;std::string&gt;" parse="opt_parse_tabs_widgets" default="&quot;splash,playlist,browser,info,help&quot;" lateinit="yes">
    <description>Specify widget order of tabbar (left to right)</description>
  </opt>

  <opt name="main.widgets" type="std::vector&lt;std::string&gt;" parse="opt_parse_main_widgets" default="&quot;playinginfo,tabbar,mainwindow,progressbar&quot;" lateinit="yes">
    <description>Specify widgets to show (up to down)</description>
  </opt>
</config>
